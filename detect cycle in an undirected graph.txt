//Detect cycle in an undirected graph//



class Solution
{
    public boolean dfs(ArrayList<ArrayList<Integer>> adj,boolean[] visited,int s,int parent){
        visited[s]=true;
        for(int m:adj.get(s)){
            if(!visited[m]){
                if(dfs(adj,visited,m,s)){
                    return true;
                }
            }
            else if(m!=parent){
                return true;
            }
        }
        return false;
    }
    public boolean isCycle(int V, ArrayList<ArrayList<Integer>> adj)
    {
        // Code here
        boolean visited[]=new boolean[V];
        for(int i=0;i<V;i++){
            if(!visited[i]){
                if(dfs(adj,visited,i,-1)){
                    return true;
                }
            }
        }
        return false;
    }
}


